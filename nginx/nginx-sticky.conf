# nginx Load Balancer Configuration with Sticky Sessions
# Part of IT-Arkitektur 6. semester - AKF Scale Cube X-axis implementation
#
# This configuration demonstrates sticky sessions (session affinity) where
# each client is consistently routed to the same backend instance.
# Uses IP-based hashing to ensure the same client IP always hits the same server.

events {
    worker_connections 1024;
}

http {
    # Logging configuration
    access_log logs/access.log;
    error_log logs/error.log;

    # Upstream block with sticky sessions enabled
    # ip_hash directive ensures requests from same client IP go to same backend
    upstream searchapi_backend {
        ip_hash;  # Enable sticky sessions based on client IP

        # API Instance 1 - Port 5137 (INSTANCE_ID=API-1)
        server localhost:5137;

        # API Instance 2 - Port 5138 (INSTANCE_ID=API-2)
        server localhost:5138;

        # API Instance 3 - Port 5139 (INSTANCE_ID=API-3)
        server localhost:5139;

        # Note: keepalive works differently with ip_hash
        # Connection reuse is still beneficial but distribution is IP-based
        keepalive 32;
    }

    # Load balancer server configuration
    server {
        # Listen on port 8080 for incoming requests
        listen 8080;
        server_name localhost;

        # Proxy all requests to the upstream backend
        location / {
            proxy_pass http://searchapi_backend;

            # Pass original client information to backends
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeout configuration for long-running searches
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Enable HTTP/1.1 for better performance with keepalive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Health check endpoint for monitoring
        location /health {
            access_log off;
            return 200 "nginx load balancer (sticky sessions) is running\n";
            add_header Content-Type text/plain;
        }
    }
}
